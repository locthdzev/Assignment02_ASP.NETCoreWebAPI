@using BusinessObject.DTOs;
@model IEnumerable<PublisherDTO>

<div class="container-fluid mt-5">
    <h2 class="text-center mb-4">Publisher Management</h2>

    <div class="row">
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Add/Edit Publisher</h4>
                </div>
                <div class="card-body">
                    <input type="text" id="publisherName" class="form-control mb-3" placeholder="Publisher Name" />
                    <input type="text" id="city" class="form-control mb-3" placeholder="City" />
                    <input type="text" id="state" class="form-control mb-3" placeholder="State" />
                    <input type="text" id="country" class="form-control mb-3" placeholder="Country" />
                    <button id="addPublisher" class="btn btn-primary btn-lg w-100">Add</button>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-secondary text-white">
                    <h4 class="mb-0">Publisher List</h4>
                </div>
                <div class="card-body">
                    <input type="text" id="searchPublisher" class="form-control mb-3" placeholder="Search Publisher" />
                    <ul id="publisherList" class="list-group list-group-flush"></ul>
                </div>
                <div class="card-footer">
                    <nav aria-label="Page navigation">
                        <ul id="pagination" class="pagination justify-content-center"></ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Notification</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertMessage"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let currentPage = 1;
    const publishersPerPage = 5;
    let allPublishers = [];

    $(document).ready(function () {
        loadPublishers();

        $('#addPublisher').click(function () {
            const publisher = {
                publisher_name: $('#publisherName').val(),
                city: $('#city').val(),
                state: $('#state').val(),
                country: $('#country').val()
            };

            $.ajax({
                url: 'http://localhost:5259/odata/publisher',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(publisher),
                success: function () {
                    loadPublishers();
                    clearInputs();
                    showAlert('Publisher added successfully', 'success');
                },
                error: function (error) {
                    showAlert('Error: ' + error.responseText, 'danger');
                }
            });
        });

        $('#searchPublisher').on('input', function () {
            const searchTerm = $(this).val().toLowerCase();
            const filteredPublishers = allPublishers.filter(publisher =>
                publisher.publisher_name.toLowerCase().includes(searchTerm)
            );
            displayPublishers(filteredPublishers);
            createPagination(Math.ceil(filteredPublishers.length / publishersPerPage));
        });
    });

    function loadPublishers() {
        $.ajax({
            url: 'http://localhost:5259/odata/publisher',
            type: 'GET',
            success: function (data) {
                allPublishers = data;
                displayPublishers(allPublishers);
                createPagination(Math.ceil(allPublishers.length / publishersPerPage));
            },
            error: function (error) {
                showAlert('Error: ' + error.responseText, 'danger');
            }
        });
    }

    function displayPublishers(publishers) {
        const paginatedPublishers = publishers.slice((currentPage - 1) * publishersPerPage, currentPage * publishersPerPage);

        $('#publisherList').empty();
        $.each(paginatedPublishers, function (i, publisher) {
            $('#publisherList').append(`
                <li class="list-group-item">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">ID: ${publisher.pub_id}</h5>
                            <h5 class="mb-1">Name: ${publisher.publisher_name}</h5>
                            <p class="mb-1">City: ${publisher.city}</p>
                            <p class="mb-1">State: ${publisher.state}</p>
                            <p class="mb-1">Country: ${publisher.country}</p>
                        </div>
                        <div>
                            <button class="btn btn-outline-warning btn-sm me-1" onclick="getPublisher(${publisher.pub_id})">Edit</button>
                            <button class="btn btn-outline-danger btn-sm" onclick="deletePublisher(${publisher.pub_id})">Delete</button>
                        </div>
                    </div>
                </li>
            `);
        });

        if (publishers.length === 0) {
            $('#publisherList').append(`<li class="list-group-item text-center">No publishers found</li>`);
        }
    }

    function createPagination(totalPages) {
        $('#pagination').empty();
        const pageLinks = [];

        if (currentPage > 1) {
            pageLinks.push(`<li class="page-item"><a class="page-link" href="#" onclick="changePage(${currentPage - 1})">«</a></li>`);
        }

        for (let i = 1; i <= totalPages; i++) {
            pageLinks.push(`<li class="page-item ${i === currentPage ? 'active' : ''}"><a class="page-link" href="#" onclick="changePage(${i})">${i}</a></li>`);
        }

        if (currentPage < totalPages) {
            pageLinks.push(`<li class="page-item"><a class="page-link" href="#" onclick="changePage(${currentPage + 1})">»</a></li>`);
        }

        $('#pagination').append(pageLinks.join(''));
    }

    function changePage(page) {
        currentPage = page;
        const searchTerm = $('#searchPublisher').val().toLowerCase();
        const filteredPublishers = allPublishers.filter(publisher =>
            publisher.publisher_name.toLowerCase().includes(searchTerm)
        );
        displayPublishers(filteredPublishers);
    }

    function getPublisher(id) {
        $.ajax({
            url: 'http://localhost:5259/odata/publisher/' + id,
            type: 'GET',
            success: function (publisher) {
                $('#publisherName').val(publisher.publisher_name);
                $('#city').val(publisher.city);
                $('#state').val(publisher.state);
                $('#country').val(publisher.country);
                $('#addPublisher').text('Update').removeClass('btn-primary').addClass('btn-success').off('click').on('click', function () {
                    updatePublisher(id);
                });
            },
            error: function (error) {
                showAlert('Error: ' + error.responseText, 'danger');
            }
        });
    }

    function updatePublisher(id) {
        const publisher = {
            publisher_name: $('#publisherName').val(),
            city: $('#city').val(),
            state: $('#state').val(),
            country: $('#country').val()
        };

        $.ajax({
            url: 'http://localhost:5259/odata/publisher/' + id,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(publisher),
            success: function () {
                loadPublishers();
                clearInputs();
                $('#addPublisher').text('Add').removeClass('btn-success').addClass('btn-primary').off('click').on('click', function () {
                    addPublisher();
                });
                showAlert('Publisher updated successfully', 'success');
            },
            error: function (error) {
                showAlert('Error: ' + error.responseText, 'danger');
            }
        });
    }

    function deletePublisher(id) {
        if (confirm('Are you sure you want to delete this publisher?')) {
            $.ajax({
                url: 'http://localhost:5259/odata/publisher/' + id,
                type: 'DELETE',
                success: function () {
                    loadPublishers();
                    showAlert('Publisher deleted successfully', 'success');
                },
                error: function (error) {
                    showAlert('Error: ' + error.responseText, 'danger');
                }
            });
        }
    }

    function clearInputs() {
        $('#publisherName').val('');
        $('#city').val('');
        $('#state').val('');
        $('#country').val('');
    }

    function showAlert(message, type) {
        $('#alertMessage').text(message);
        $('#alertModal').modal('show');
    }
</script>
